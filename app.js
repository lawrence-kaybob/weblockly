/**
 * app.js
 * @fileOverview Express framework based server creation sciprt
 * Base have been automaitcally generated by express-generator
 * and our team added static routes
 * */

// Modules import (Generated by express-generator)
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var index = require('./routes/index');
var users = require('./routes/users');
var export_code = require('./routes/export_code'); 
var cdn = require('./routes/cdn');

var app = express();

var mongoose = require('./db/db-config');

// View Engine Setup (Generated by express-generator)
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');

// Logger & Parser setup (Generated by express-generator)
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());

// Default route for public assets
app.use(express.static(path.join(__dirname, 'public')));

// Library modules (in node_modules) exposed with static route name (Written by our team)
app.use('/blockly',express.static(path.join(__dirname, 'node_modules/blockly')));
app.use('/codemirror', express.static(path.join(__dirname, 'node_modules/codemirror/lib')));
app.use('/codemirror/addon', express.static(path.join(__dirname, 'node_modules/codemirror/addon')));
app.use('/codemirror/mode', express.static(path.join(__dirname, 'node_modules/codemirror/mode')));

// Routing rule for view rendering (Generated by express-generator)
app.use('/', index);
app.use('/users', users);
app.use('/export', export_code);
app.use('/cdn', cdn);

// catch 404 and forward to error handler (Generated by express-generator)
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
